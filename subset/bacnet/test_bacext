#!/bin/bash -e

JAR=bacnet4j/bacnet4j.jar
CLASS=com.serotonin.bacnet4j.test.DaqTest.Main
TARGET="Object name = BACnet device"
TMPOUT=`tempfile`
REPORT=/tmp/report.txt

if [ "$1" == "loop" ]; then
    shift
    subcmd=loop
else
    subcmd=noloop
fi

# Pick the one not-lo inet v4 address.
line=$(ip addr show | fgrep "inet " | fgrep -v 127.0.0.1)

read -r -a parts <<< "$line"

local_ip=${parts[1]%/*}
broadcast_ip=${parts[3]}

pics_test_id="bacnet_PICS"
addr_test_id="bacnet_ADDR_UNIQUE"
version_test_id="bacnet_VERSION"

echo Scanning bacnet $broadcast_ip from $local_ip

java -cp $JAR $CLASS $pics_test_id $broadcast_ip $local_ip $subcmd | tee $TMPOUT
java -cp $JAR $CLASS $addr_test_id $broadcast_ip $local_ip $subcmd | tee $TMPOUT
java -cp $JAR $CLASS $version_test_id $broadcast_ip $local_ip | tee $TMPOUT


bacnet_runtime=/config/bacnet_runtime.sh
if [ -f $bacnet_runtime ]; then
    echo Processing $bacnet_runtime
    source $bacnet_runtime
fi

if [ -z "$BACNET_EXPECTED" ]; then
    # For testing, consider the presense of bacnet a failure.
    ! fgrep "$TARGET" $TMPOUT
else
    echo Bacnet expected!
    fgrep "$TARGET" $TMPOUT
fi

cat tmp/PICS.txt >> $REPORT
cat tmp/PICS_APPENDIX.txt >> $REPORT

cat tmp/DuplicatesTestReport.txt >> $REPORT
cat tmp/DuplicatesTestReport_APPENDIX.txt >> $REPORT

cat tmp/BacnetVersionTest.txt >> $REPORT
cat tmp/BacnetVersionTest_APPENDIX.txt >> $REPORT
