#!/bin/bash -e

REPORT=/tmp/report.txt
CONFIG=/config/device/module_config.json

TEST_NAME='security.firmware'
TEST_DESCRIPTION='Automatic bacnet firmware scan'
TEST_SUMMARY=' Nothing more to report...'
LOG=/tmp/firmware.log

# Error handling

if [ -f $CONFIG ]; then
    echo Extracting servers config from $CONFIG
    jq .servers $CONFIG
else
    echo No module config $CONFIG
fi

# Sanity

ping -n -c 3 $TARGET_IP

echo Testing target $TARGET_IP port 23
nc -nzv $TARGET_IP -w 5 23 || true
nc -nzv $TARGET_IP -w 5 23 || true
sleep 1
nc -nzv $TARGET_IP -w 5 23 || true
sleep 1

# Test command body

echo Running nmap 'bacnet_info' script

nmap --script bacnet-info -sU -p 47808 -oN $LOG $TARGET_IP

# Process the output of the test command
# Possible regex: 
# Firmware:\s.*\s
# (?<=Firmware:)\s+.*
# grep -Po "(?<=Firmware:)\s+.*"

cat $LOG

touch $REPORT
rm -f .fail
OUTPUT=$(grep -Po "(?<=Firmware:)\s+.*" $LOG)
TEST_SUMMARY=$(echo version found: $OUTPUT)

# pass/fail/info/skip logic

CONFIG_VERSION=`jq -r .device_info.firmware_version /config/device/module_config.json`

if [-z OUTPUT]; then
    result=skip
fi

if [-z $CONFIG_VERSION ]; then
    result=info
else
    if [CONFIG_VERSION == OUTPUT]; then
        echo 'Firmware version matches config.'
        result=pass
    else
        echo 'Firmware version is incorrect!'
        touch .fail
    fi
fi

# Report writing
# Format:
# --------------------
# $TEST_NAME
# --------------------
# $TEST_DESCRIPTION
# --------------------
# $LOG
# --------------------
# <RESULT> <result_summary>

cat <<EOF > $REPORT
--------------------
$TEST_NAME
--------------------
$TEST_DESCRIPTION
--------------------
EOF

if [ -f .fail ]; then
    echo Firmware version:
    cat $REPORT
    result=fail
else
    cat $LOG >> $REPORT
    echo 'Firmware test complete' | tee -a $REPORT
fi

echo '--------------------' | tee -a $REPORT
echo RESULT $result $TEST_NAME $TEST_SUMMARY | tee -a $REPORT

[ "$result" == pass ]
